In the first attempt for the neural network, I selected 2 layers: the first layer having 8 neurons, and the second having 5 neurons, both having activation function as tanh, and with 100 epochs. After training and evaluate the model, the predictive accuracy returns 72.77%, not reaching the target at 75% yet.
To increase the model performance, I tried four different approaches: adding additional hidden layer, adding additional neurons to the hidden layers, changing the activation function of hidden layers, and combining all of the above. All efforts return similar performance: approximately 72%. Therefore, looks like the model has been optimized at approximately 72% but still not reaching our target.
If you were to implement a different model to solve this classification problem, I would like the SVM model, and considering less features. SVM is expected to achieve similar predictive accuracy with deep learning, but much less amount of code required. Furthermore, since there are too many features, some of them might not be relevant to the result we are looking for, thus reducing our accuracy. We can also try removing a few of them to see if the accuracy will be improved.

